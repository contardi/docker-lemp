services:
  webserver:
    image: nginx:alpine
    container_name: lemp-webserver
    working_dir: /var/www
    volumes:
      - ./var/www:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certificates:/etc/nginx/certificates
    ports:
      - "80:80"
      - "443:443"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  varnish:
    image: varnish:7.0
    container_name: lemp-varnish
    ports:
      - "8080:8080"
      - "6082:6082"
    depends_on:
      - webserver
    links:
      - webserver
    volumes:
      - ./varnish:/etc/varnish
    environment:
      - VARNISH_SIZE=2G
      - CACHE_SIZE=256M

  php74-fpm:
    build:
      context: php74
      args:
        - USERGID=${USERGID}
        - USERUID=${USERUID}
        - USERNAME=${USERNAME}
        - NODE_MAJOR=18
    container_name: lemp-php74
    working_dir: /var/www
    volumes:
      - ./var/log/php74/:/var/log/php74/
      - ./var/www:/var/www
      - ./php74/config/php.ini:/usr/local/etc/php/php.ini
      - ./ssh-keys:/var/www/.ssh/
    env_file:
      - .env
    environment:
      - TERM=xterm
      - PHP_IDE_CONFIG=serverName=PHP
      - COMPOSER_MEMORY_LIMIT=-1
      - COMPOSER_PROCESS_TIMEOUT=600
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  php81-fpm:
    build:
      context: php81
      args:
        - USERGID=${USERGID}
        - USERUID=${USERUID}
        - USERNAME=${USERNAME}
        - NODE_MAJOR=18
    container_name: lemp-php81
    working_dir: /var/www
    volumes:
      - ./var/log/php81/:/var/log/php81/
      - ./var/www:/var/www
      - ./php81/config/php.ini:/usr/local/etc/php/php.ini
      - ./ssh-keys:/var/www/.ssh/
    env_file:
      - .env
    environment:
      - TERM=xterm
      - PHP_IDE_CONFIG=serverName=PHP
      - COMPOSER_MEMORY_LIMIT=-1
      - COMPOSER_PROCESS_TIMEOUT=600
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  php82-fpm:
    build:
      context: php82
      args:
        - USERGID=${USERGID}
        - USERUID=${USERUID}
        - USERNAME=${USERNAME}
        - NODE_MAJOR=18
    container_name: lemp-php82
    working_dir: /var/www
    volumes:
      - ./var/log/php82/:/var/log/php82/
      - ./var/www:/var/www
      - ./php82/config/php.ini:/usr/local/etc/php/php.ini
      - ./ssh-keys:/var/www/.ssh/
    env_file:
      - .env
    environment:
      - TERM=xterm
      - PHP_IDE_CONFIG=serverName=PHP
      - COMPOSER_MEMORY_LIMIT=-1
      - COMPOSER_PROCESS_TIMEOUT=600
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  mysql:
    image: mysql:8.0
    container_name: lemp-mysql
    ports:
      - "3306:3306"
    volumes:
      - ./var/lib/mysql:/var/lib/mysql
      - ./mysql/conf.d/custom.cnf:/etc/mysql/conf.d/100-custom.cnf
      - ./var/log/mysql/mysql.log:/var/log/mysql/mysql.log
    environment:
      - MYSQL_USERNAME=root
      - MYSQL_ROOT_PASSWORD=root
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: lemp-phpmyadmin
    links:
      - mysql:db
    ports:
      - 8000:80
    environment:
      - PMA_ARBITRARY=1
      - UPLOAD_LIMIT=1204M
      - MEMORY_LIMIT=4096M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  sonarqube:
    image: sonarqube:latest
    container_name: lemp-sonarqube
    depends_on:
      - postgres
    links:
      - postgres
    ports:
      - 9999:9000
      - 9092:9092
    environment:
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - SONARQUBE_JDBC_USERNAME=postgres
      - SONARQUBE_JDBC_PASSWORD=postgres
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonarqube
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  redis:
    image: redis:alpine
    container_name: lemp-redis
    ports:
      - "6379:6379"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  opensearch:
    build:
      context: opensearch/2
    container_name: lemp-opensearch
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - DISABLE_INSTALL_DEMO_CONFIG=true
      - DISABLE_SECURITY_PLUGIN=true
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9600:9600
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  opensearch1:
    build:
      context: opensearch/1
    container_name: lemp-opensearch-1
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - DISABLE_INSTALL_DEMO_CONFIG=true
      - DISABLE_SECURITY_PLUGIN=true
      - discovery.type=single-node
    ports:
      - 9201:9200
      - 9601:9600
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: lemp-opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  rabbitmq:
    image: rabbitmq:management
    container_name: lemp-rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - "./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins"
    environment:
      - RABBITMQ_ERLANG_COOKIE=MYSECRETCOOKIE
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=/
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  node:
    build:
      context: node
      args:
        - USERNAME=${USERNAME}
    container_name: lemp-node
    user: "node"
    volumes:
      - ./var/node/app:/usr/src/app
    env_file:
      - .env
    environment:
      - NODE_OPTIONS=--openssl-legacy-provider
    working_dir: /usr/src/app
    command: "nodemon --exec 'node --inspect=0.0.0.0:9229 index.js'"
    ports:
      - "3000:3000"
      - "9229:9229"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  mongodb:
    image: mongo:latest
    container_name: lemp-mongodb
    volumes:
      - ./var/lib/mongodb:/data/db
      - ./var/log/mongo/mongodb.log:/var/log/mongodb/mongod.log
    ports:
      - 27017:27017
    environment:
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=root
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  mailhog:
    image: mailhog/mailhog:latest
    container_name: lemp-mailhog
    ports:
      - "8025:8025"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  postgres:
    image: postgres
    container_name: lemp-postgres
    environment:
      POSTGRES_DB: sonarqube
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - ./var/lib/postgres:/data/postgres
    ports:
      - "5432:5432"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
